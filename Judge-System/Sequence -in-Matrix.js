let print;
let gets;
const init = function (input) {
    print = print || console.log;

    const gen = function* (inp) {
        for (let i = 0; i < inp.length; i++) {
            yield inp[i];
        }
    };

    const generator = gen(input);

    gets = gets || (() => generator.next().value);
};
const input = [
    '6 6',
    '92 11 23 42 59 48',
    '09 92 23 72 56 14',
    '17 63 92 46 85 95',
    '34 12 52 22 23 95',
    '26 88 78 71 29 95',
    '26 34 16 63 39 95',

];
const input2 = [
    "17 13",
    "-288123 450661 -946326 -43781 -795461 -916583 92951 46106 253384 -738473 -313052 490796 -533861",
    "-205863 800781 690869 478465 44395 -493827 52760 507661 -358758 253384 239893 659007 -913139",
    "-795853 646257 995562 -479675 640414 650386 -656883 107347 766336 242328 253384 -64599 -197899",
    "272018 -939418 -179971 856593 191428 681617 -183690 262791 871167 293633 -596644 253384 894085",
    "524671 -516568 678370 -229249 342306 -556947 -573896 -676629 378028 293633 -283545 152476 253384",
    "-929189 514573 239154 -961441 678249 145449 -857416 -723345 -369750 293633 -754351 -283545 296871",
    "868019 985084 202702 -415708 -336889 -308812 -401929 218482 63751 293633 -156644 -672429 -283545",
    "-881915 286025 -416488 105282 751592 697283 -622204 505244 607294 293633 976492 419513 796113",
    "-342558 362717 665278 750157 -358500 379677 523635 -198296 -798190 293633 809963 -570083 685701",
    "-715154 511995 219373 -772637 822176 347975 579908 689347 685801 961345 -261636 370381 723156",
    "391516 -715154 -707763 49093 140206 -466273 891737 649264 89396 -104625 432274 -315628 952140",
    "-468097 350259 -715154 51939 172544 348886 -890954 -44206 151 -955900 -927135 407836 -254155",
    "-293332 -824308 775151 -715154 560278 742262 112470 -965208 332589 164610 581415 -604487 -663631",
    "555455 947550 -927099 477651 -715154 -642255 754114 -108329 -487630 -653002 -760793 -252693 -400166",
    "-589998 815498 902153 -144415 883561 -715154 649782 666529 579225 -690986 389375 4976 632930",
    "736829 739818 733204 956757 -472291 548439 898901 997431 -866069 -241822 309919 -442213 -904745",
    "624908 482529 -619052 -299112 288404 173789 -33102 494358 -932785 519314 373108 985159 -600865",
];
init(input)

//========================================== READ INPUT / MAKE MATRIX
let size = gets().split(" ").map(Number);
let row = size[0];
let col = size[1];
let matrix = [];
for (let i = 0; i < row; i++) {
    let line = gets().split(' ').map(Number);
    matrix.push(line);
}
//=========================== MAKE MAX SUM OF ROWS NUM
let sum = 0;
matrix.forEach((array) => {
    let temp = 1;
    array.forEach((element, index) => {
        if (element === array[index + 1]) {
            temp += 1;
        }
    })
    if (sum < temp) {
        sum = temp;
    } else if (sum === 1) {
        sum = 0;
    }
})
//================================ MAKE MAX SUM OF COLS SUM
for (let i = 0; i < col; i++) {
    let temp = 1;
    for (let j = 1; j < row; j++) {
        if (matrix[j - 1][i] === matrix[j][i])
            temp += 1
    }
    if (sum < temp) {
        sum = temp;
    }
}
//=================================== MAKE MAX SUM OF DIAGONAL \
row = 6;
col = 4
let start = row > col ? col : row
let y = 1
for (let i = 1; i < start; i++) {
    if (matrix[i - 1][i - 1] === matrix[i][i]) {
        y += 1;
    }
    if (sum < y) {
        sum = y;
    }
}
//=================================== MAKE MAX SUM OF DIAGONAL /
let x = 1
for (let i = 1; i < start; i++) {
    if (matrix[i - 1][col - i] === matrix[i][col - 1 - i]) {
        x += 1;
    }
    if (sum < x) {
        sum = x;
    }
}
print(sum);